#!/bin/bash
# To run every hour, add this to crontab -e:
# 0 * * * * ~/.dotfiles/bin/due

# Set the DISPLAY variable
export DISPLAY=:1

# Ensure the script has access to the DBus session for desktop notifications
# This might need adjustment based on your system setup
export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$(id -u)/bus"

# Archive done items silently
todo.sh archive >/dev/null 2>&1

# Ensure Habit for tomorrow is set
TODO_PATH="$HOME/Notes/todo.txt"
HABIT="📔 Read, 🥾 walk or 🏋 train \n(just 10 minutes) rec:1d" # rec:1d is only to make it compatible with "sleek", not used by this script or task.sh

# Check if the txt file exists
if [ ! -f "$TODO_PATH" ]; then
    echo "File $TODO_PATH does not exist."
    exit 1
fi

# Read the last line of the file
last_line=$(tail -n 1 "$TODO_PATH")

# Check if the last line is empty
if [[ -n $last_line ]]; then
    # If the last line is not empty, add an empty line to the file
    echo "" >> "$TODO_PATH"
fi

updateTodoWithDueDate() {
  # Get tomorrow's date in YYYY-MM-DD format and convert it to a timestamp
  today=$(date -d today "+%Y-%m-%d")
  todayStamp=$(date -d "$today" +%s)
  tomorrow=$(date -d tomorrow "+%Y-%m-%d")
  tomorrowStamp=$(date -d "$tomorrow" +%s)
  dayAfterTomorrowStamp=$(date -d "2 days" +%s)

  # Use awk to extract due dates from the file, find the earliest one
  earliestDue=$(awk -v habit="$HABIT" 'index($0, habit) && /due:/ {print}' "$TODO_PATH" | sed -E "s/.*due:([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/" | sort | head -n 1)

  if [ -z "$earliestDue" ]; then # due date is empty
      echo "Empty, updating todo.txt with due date for tomorrow..."
      echo "$HABIT due:$tomorrow" >> "$TODO_PATH"
  elif [[ ! -z "$earliestDue" ]]; then # due date is NOT empty
      # Convert the earliest due date to a timestamp
      earliestDueStamp=$(date -d "$earliestDue" +%s)

      # Append a line with tomorrow's date to the file if the earliest due date is before tomorrow
      if [[ $earliestDueStamp -lt $dayAfterTomorrowStamp ]]; then
        echo "Not empty, updating todo.txt with due date for tomorrow..."
        echo "$HABIT due:$tomorrow" >> "$TODO_PATH"
      fi
  fi

  #  Remove duplicate lines
  awk '!seen[$0]++' "$TODO_PATH" > "$TODO_PATH.tmp" && mv "$TODO_PATH.tmp" "$TODO_PATH"
}

updateTodoWithDueDate

# Get today's date as a Unix timestamp at 00:00:00
TODAY=$(date '+%s' -d "$(date '+%Y-%m-%d')")

# Read through each line
while IFS= read -r line; do
    # Skip empty lines
    if [[ -z "$line" ]]; then
        continue
    # Also skip lines that start with "x "
    elif [[ "$line" == x\ * ]]; then
        todo.sh archive >/dev/null 2>&1
        continue
    fi

    # Extract the due date from each task
    DUE_DATE=$(echo "$line" | grep -oP 'due:\K[0-9-]+')

    # Convert the due date to Unix timestamp at 00:00:00
    DUE_DATE_TS=$(date '+%s' -d "$DUE_DATE")

    # Check if the task was due today or before today
    if [ "$DUE_DATE_TS" -le "$TODAY" ]; then
        # Extract the title of the task
        TITLE=$(echo "$line" | sed 's/\\n.*//' | sed -E 's/.*([0-9]{4}-[0-9]{2}-[0-9]{2}) //g' | sed -E 's/ rec:.*//')
        TITLE_FULL=$(echo "$line" | sed -E 's/.*([0-9]{4}-[0-9]{2}-[0-9]{2}) //g' | sed -E 's/ rec:.*//')
        safe_line=$(printf '%s\n' "$line" | sed 's:[][\/.^$*]:\\&:g')

        if zenity --question --icon=view-refresh --no-wrap --title="Did you complete this task?" --text="$TITLE_FULL"; then
            # Mark done when clicking "Yes":
            echo -e "Marking as done: \n$safe_line"
            sed -i "/^$safe_line$/s/^/x /" "$TODO_PATH"
            todo.sh archive >/dev/null 2>&1
            notify-send -t 10000 -u normal --icon=face-cool "$TITLE" "Task marked done"
            updateTodoWithDueDate
            echo "Task marked done, todo updated"
            # All icons: https://specifications.freedesktop.org/icon-naming-spec/latest/ar01s04.html
        else
            # Mute the task when clicking "No":
            echo -e "Ignoring task: \n$safe_line"
            notify-send -t 10000 -u normal --icon=appointment-missed "$TITLE" "Task still pending..."
            # All icons: https://specifications.freedesktop.org/icon-naming-spec/latest/ar01s04.html
        fi
    fi
done < "$TODO_PATH"